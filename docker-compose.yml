version: "3.5"
services:
  api1:
    container_name: api1
    hostname: api1
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - database
      - cache
    expose:
      - "3333"
    environment:
      - LOG_DEBUG=false
      - REDIS_HOST=cache
      - DATABASE_HOST=database
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "0.5GB"

  api2: # API - Inst√¢ncia 01
    container_name: api2
    hostname: api2
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - database
      - cache
    expose:
      - "3333"
    environment:
      - LOG_DEBUG=false
      - REDIS_HOST=cache
      - DATABASE_HOST=database
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "0.5GB"

  nginx: # Load Balancer
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "0.5GB"

  database: # Banco de dados
    image: postgres:latest
    container_name: database
    expose:
      - "5432"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: "1GB"

  cache:
    image: redis:latest
    container_name: cache
    expose:
      - "6379"
    ports:
      - 6379:6379
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "0.5GB"
